<#@ template language="C#" inherits="APS.NUnit.Ext.Templates.TemplateBase" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
namespace <#= Params.FakeJob.Namespace #>
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class <#= Params.FakeJob.TypeName #> : <#= Params.IDbContextJob.TypeName #>
    {
        public <#= Params.FakeJob.TypeName #>()
        {
			<#
			foreach(var property in Params.DbContextType.DbSetProperties)
			{
			#>
			<#= property.Name #> = new FakeDbSet<<#= property.PropertyType.GetGenericArguments()[0].Name #>>();
			<#
			}
			#>
        }

		<#
		foreach(var property in Params.DbContextType.DbSetProperties)
		{
		#>
		public virtual DbSet<<#= property.PropertyType.GetGenericArguments()[0].Name #>> <#= property.Name #> { get; set; }
		<#
		}
		#>

		<#
		foreach(var method in Params.DbContextType.AvailableMethods)
		{
		string returnType = "";
		if(method.ReturnType != null)
			returnType = method.ReturnType.Name;
		else
			returnType = "void";
		#>
		public partial <#= returnType #> <#= method.Name #>(<#= "BLANK" #>);
		<#
		}
		#>
    }
}
